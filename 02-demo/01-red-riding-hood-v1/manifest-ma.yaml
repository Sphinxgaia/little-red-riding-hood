---
# Source: little-red-riding-hood-goldie/templates/body-server_sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ma-little-red-riding-hood-goldie-body
  labels:
    helm.sh/chart: little-red-riding-hood-goldie-0.1.0
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: little-red-riding-hood-goldie-body
    app.kubernetes.io/instance: ma-body
---
# Source: little-red-riding-hood-goldie/templates/main-server_sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ma-little-red-riding-hood-goldie-main
  labels:
    helm.sh/chart: little-red-riding-hood-goldie-0.1.0
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: little-red-riding-hood-goldie-main
    app.kubernetes.io/instance: ma-main
---
# Source: little-red-riding-hood-goldie/templates/body-server_svc.yaml
apiVersion: v1
kind: Service
metadata:
  # connection between main and body / must be static for the moment
  name: goldie-body
  labels:
    kubernetes.io/instance: body-server
    helm.sh/chart: little-red-riding-hood-goldie-0.1.0
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: little-red-riding-hood-goldie-body
    app.kubernetes.io/instance: ma-body
spec:
  type: ClusterIP
  ports:
    # connection between main and body / must be static for the moment
    - port: 9007
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: little-red-riding-hood-goldie-body
    app.kubernetes.io/instance: ma-body
---
# Source: little-red-riding-hood-goldie/templates/main-server_svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: ma-little-red-riding-hood-goldie-main
  annotations:
        external-dns.alpha.kubernetes.io/hostname: green.aws.sphinxgaia.jeromemasson.fr
  labels:
    kubernetes.io/instance: main-server
    helm.sh/chart: little-red-riding-hood-goldie-0.1.0
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: little-red-riding-hood-goldie-main
    app.kubernetes.io/instance: ma-main
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: little-red-riding-hood-goldie-main
    app.kubernetes.io/instance: ma-main
---
# Source: little-red-riding-hood-goldie/templates/body-server.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: little-red-riding-hood-goldie-body
  labels:
    app.kubernetes.io/component: body-server
    bobinette: pull
    helm.sh/chart: little-red-riding-hood-goldie-0.1.0
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: little-red-riding-hood-goldie-body
    app.kubernetes.io/instance: ma-body
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: little-red-riding-hood-goldie-body
      app.kubernetes.io/instance: ma-body
  template:
    metadata:
      labels:
        app.kubernetes.io/component: body-server
        app.kubernetes.io/name: little-red-riding-hood-goldie-body
        app.kubernetes.io/instance: ma-body
    spec:
      terminationGracePeriodSeconds: 5
      serviceAccountName: ma-little-red-riding-hood-goldie-body
      securityContext:
        {}
      initContainers:
      - name: sleep
        image: alpine
        command: 
        - sh 
        - -c 
        - 'sleep 10'
      containers:
      - name: little-red-riding-hood-goldie-body
        image:  "ghcr.io/sphinxgaia/little-red-riding-hood-goldie-body:basic"
        imagePullPolicy: Always
        resources: {}
        ports:
        - name: http
          containerPort: 9000
          protocol: TCP
        env:
          - name: PORT
            value: "9000"
          - name: "VERSION"
            value: "basic"
        livenessProbe:
          httpGet:
            path: /metrics
            port: http
        readinessProbe:
          httpGet:
            path:  /metrics
            port: http
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: red-archi
                operator: In
                values:
                - enabled
---
# Source: little-red-riding-hood-goldie/templates/main-server.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: little-red-riding-hood-goldie-main
  labels:
    app.kubernetes.io/component: main-server
    bobinette: pull
    helm.sh/chart: little-red-riding-hood-goldie-0.1.0
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: little-red-riding-hood-goldie-main
    app.kubernetes.io/instance: ma-main
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: little-red-riding-hood-goldie-main
      app.kubernetes.io/instance: ma-main
  template:
    metadata:
      labels:
        app.kubernetes.io/component: main-server
        app.kubernetes.io/name: little-red-riding-hood-goldie-main
        app.kubernetes.io/instance: ma-main
    spec:
      terminationGracePeriodSeconds: 5
      serviceAccountName: ma-little-red-riding-hood-goldie-main
      securityContext:
        {}
      containers:
      - name: little-red-riding-hood-goldie-main
        image:  "ghcr.io/sphinxgaia/little-red-riding-hood-goldie-main:green"
        imagePullPolicy: Always
        resources: {}
        ports:
        - name: http
          containerPort: 9000
          protocol: TCP
        env:
          - name: PORT
            value: "9000"
          - name: "VERSION"
            value: "red"
        livenessProbe:
          httpGet:
            path:  /
            port: http
        readinessProbe:
          httpGet:
            path:  /
            port: http
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: red-archi
                operator: In
                values:
                - enabled
---
# Source: little-red-riding-hood-goldie/templates/main-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ma-little-red-riding-hood-goldie
  labels:
    helm.sh/chart: little-red-riding-hood-goldie-0.1.0
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: "green.aws.sphinxgaia.jeromemasson.fr"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: ma-little-red-riding-hood-goldie-main
                port:
                  number: 80
---
# Source: little-red-riding-hood-goldie/templates/tests/test-connection-body.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "ma-little-red-riding-hood-goldie-test-connection-body"
  labels:
    helm.sh/chart: little-red-riding-hood-goldie-0.1.0
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['ma-little-red-riding-hood-goldie-body:80']
  restartPolicy: Never
---
# Source: little-red-riding-hood-goldie/templates/tests/test-connection-main.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "ma-little-red-riding-hood-goldie-test-connection-main"
  labels:
    helm.sh/chart: little-red-riding-hood-goldie-0.1.0
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['ma-little-red-riding-hood-goldie-main:80']
  restartPolicy: Never
